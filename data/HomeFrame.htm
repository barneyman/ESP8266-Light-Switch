<HTML>
<HEAD>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

<TITLE></TITLE>
    <link rel="stylesheet" type="text/css" href="switch.css">
</HEAD>
<BODY onload="OnLoad()">

    <div id="statusbar" hidden>
        <fieldset>
            <div id="statustext"></div>
        </fieldset>
    </div>

    <div class="verticalContainer">
        <fieldset>
            <legend>Switches</legend>
            <div class="verticalContainer" id="switches"></div>
        </fieldset>
        <br>
        <fieldset>
            <legend>Sensors</legend>
            <div class="verticalContainer" id="sensors"></div>
        </fieldset>
        <div class="horizontalContainerRight"><button id="refresh" onclick="PopulateList(true)">Refresh</button></div>
    </div>


    <div>

        <button id="allon" onclick="All('on')" hidden>All On</button>
        <button id="alloff" onclick="All('off')" hidden>All Off</button>
        

    </div>
        <script src="common.js"></script>


        <script>

            function OnLoad() {
                PopulateList(true)
            }



            function PopulateList(clearTheList) {

                showStatus("Fetching ...")

                let url = base + '/json/state'

                fetch(url)
                    .then(function (response) {
                        if (response.ok)
                            return response.json();
                        throw new Error('network err')
                    })
                    .then(function (data) {

                        // then work out the switch states
                        var switches = data['switchState']
                        var sensors = data['sensorState']

                        var tableSwitches = document.getElementById('switches')
                        var tableSensors = document.getElementById('sensors')

                        if (clearTheList) {
                            tableSensors.innerHTML = "";
                            tableSwitches.innerHTML = "";
                        }

                        // switches
                        for (var eachState in switches) {
                            if (switches.hasOwnProperty(eachState)) {

                                var switchNumber = switches[eachState]["switch"]

                                // create a row
                                var row=document.createElement("div")
                                row.className="horizontalContainer"

                                var name=document.createElement("div")
                                name.innerText=switches[eachState]["name"]
                                row.appendChild(name)

                                button=document.createElement('button')
                                var buttonStateInverse = switches[eachState]["state"] == 0 ? "on" : "off"
                                button.innerText="Turn "+buttonStateInverse
                                button.setAttribute('onclick', 'Button("' + switchNumber + '","' + buttonStateInverse + '")')
                                row.appendChild(button)

                                tableSwitches.appendChild(row)

                            }
                        }

                        for (var eachState in sensors) {
                            if (sensors.hasOwnProperty(eachState)) {

                                var sensorNumber = sensors[eachState]["switch"]

                                // create a row
                                var row=document.createElement("div")
                                row.className="horizontalContainer"

                                var name=document.createElement("div")
                                name.innerText=sensors[eachState]["name"]
                                row.appendChild(name)

                                var state=document.createElement("div")
                                state.innerText=sensors[eachState]["state"]
                                row.appendChild(state)

                                tableSensors.appendChild(row)


                            }
                        }



                        clearStatus()


                    }).catch(function (error) {

                        alert(error.message)

/*                        
                        document.getElementById('loading').hidden = true;
                        document.getElementById('error').hidden = false;

                        //find all the buttons and turn them off
                        var buttons = document.getElementsByTagName('button')

                        for (index = 0; index < buttons.length; index++) {
                            buttons[index].disabled = true;
                        }
*/

                    })

            }


            function All(state) {

                let url = base + '/all?action=' + state

                var xhr = new XMLHttpRequest();

                xhr.open("GET", url, true);
                xhr.setRequestHeader("Content-type", "text/plain");

                xhr.onloadend = function () { PopulateList(true) }
                xhr.send();
            }

            function Button(number, state) {

                let url = base + '/button?port=' + number + '&action=' + state

                var xhr = new XMLHttpRequest();

                xhr.open("GET", url, true);
                xhr.setRequestHeader("Content-type", "text/plain");

                xhr.onloadend = function () { PopulateList(true) }
                xhr.send();


            }


        </script>


</BODY>
</HTML>
