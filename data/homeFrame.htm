<HTML>
<HEAD>
<META NAME="GENERATOR" Content="Microsoft Visual Studio">
<TITLE></TITLE>
    <link rel="stylesheet" type="text/css" href="switch.css">
</HEAD>
<BODY onload="OnLoad()">
    <div>
        <div id="loading">Loading</div>
        <div id="error" hidden>problem loading content</div>
        <div id="found" hidden>

            <table id="states"></table>

            <hr />

            <button id="on" onclick="All('on')">All On</button>
            <button id="off" onclick="All('off')">All Off</button>
            <button id="refresh" onclick="PopulateList(true)">Refresh</button>

        </div>
    </div>
        <script src="common.js"></script>


        <script>

            function OnLoad() {
                PopulateList(true)
            }



            function PopulateList(clearTheList) {

                let url = base + '/json/state'

                fetch(url)
                    .then(function (response) {
                        if (response.ok)
                            return response.json();
                        throw new Error('network err')
                    })
                    .then(function (data) {

                        // then work out the switch states
                        var states = data['switchState']

                        var table = document.getElementById('states')

                        if (clearTheList) {
                            table.innerHTML = "<tr><th>Action</th><th>Switch Name</th></tr>";
                        }


                        for (var eachState in states) {
                            if (states.hasOwnProperty(eachState)) {
                                // tab
                                var tr = document.createElement('tr')
                                var tdAction = document.createElement('td')
                                var tdName = document.createElement('td')
                                tr.appendChild(tdAction)
                                tr.appendChild(tdName)

                                var button = document.createElement('button');
                                var switchNumber = states[eachState]["switch"]
                                var switchName = states[eachState]["name"]

                                var buttonStateInverse = states[eachState]["state"] == 0 ? "on" : "off"


                                button.innerText = 'Turn ' + buttonStateInverse
                                button.setAttribute('onclick', 'Button("' + switchNumber + '","' + buttonStateInverse + '")')

                                tdAction.appendChild(button);
                                tdName.innerText = switchName;

                                table.appendChild(tr)



                            }
                        }

                        document.getElementById('loading').hidden = true;
                        document.getElementById('found').hidden = false;


                    }).catch(function (error) {

                        document.getElementById('loading').hidden = true;
                        document.getElementById('error').hidden = false;

                        //find all the buttons and turn them off
                        var buttons = document.getElementsByTagName('button')

                        for (index = 0; index < buttons.length; index++) {
                            buttons[index].disabled = true;
                        }


                    })

            }


            function All(state) {

                let url = base + '/all?action=' + state

                var xhr = new XMLHttpRequest();

                xhr.open("GET", url, true);
                xhr.setRequestHeader("Content-type", "text/plain");

                xhr.send();
                xhr.onloadend = function () { PopulateList(true) }
            }

            function Button(number, state) {

                let url = base + '/button?port=' + number + '&action=' + state

                var xhr = new XMLHttpRequest();

                xhr.open("GET", url, true);
                xhr.setRequestHeader("Content-type", "text/plain");

                xhr.send();
                xhr.onloadend = function () { PopulateList(true) }


            }


        </script>


</BODY>
</HTML>
